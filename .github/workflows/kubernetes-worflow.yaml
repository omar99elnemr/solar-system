name: Solar System Workflow


on:
  workflow_dispatch:
#   push:
#     branches:
#       - main
#       - 'feature/*'


# env:
#   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
#   MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
#   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}


jobs:
#   unit-testing: … 
#   code-coverage: … 
#   docker: 
  docker-build:
    name: docker build
    runs-on: ubuntu-latest
    steps:
    - name: Docker Hub Login
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
    - name: Build Docker Image for Testing
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/ga-application:${{ github.sha }}
  dev-deploy:
    name: Deploy to Dev Env
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install kubectl CLI
      uses: azure/setup-kubectl@v3
      with:
            version: '1.26.0'

    - name: Set Kubeconfig Context
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Fetch Kubernetes Cluster Details
      run: |
            kubectl version --short
            echo "-----------------------------------------"
            kubectl get nodes

    - name: Replace tokens in manifests
      uses: cschlieden/replace-tokens@v1
      with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files:
            - kubernetes/development/*.yaml
      env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/ga-application:${{ github.sha }}


    - name: Show processed manifests
      run: cat kubernetes/development/*.yaml


    - name: Create MongoDB secret
      run: |
            kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
            --from-literal=MONGO_URI=${{ env.MONGO_URI }} \
            --from-literal=MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            --save-config \
            --dry-run=client \
            -o yaml | kubectl apply -f -


    - name: Deploy manifests
      run: kubectl apply -f kubernetes/development